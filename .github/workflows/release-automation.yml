name: Update Daily Videos JSON and Tag Version

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '59 23 * * *'  # todo dia às 23h59 UTC

jobs:
  generate-videos-and-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install python-dotenv isodate requests

      - name: Criar .env com secrets
        run: |
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> .env
          echo "YOUTUBE_CHANNEL_ID=${{ secrets.YOUTUBE_CHANNEL_ID }}" >> .env

      - name: Run Python script
        run: python Scripts/gerar_videos.py

      - name: Conditionally commit videos.json (apenas se schedule/workflow_dispatch)
        if: github.event_name != 'push'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add Resources/videos.json
          if git diff --cached --quiet; then
            echo "Nenhuma alteração em videos.json"
            echo "skip_tag=true" >> $GITHUB_ENV
          else
            git commit -m "Update videos.json"
            git push
          fi

      - name: Get last version and bump patch
        id: version
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?$' | head -n1)

          if [ -z "$LAST_TAG" ]; then
            echo "No existing tags found, using v0.0.1"
            echo "next_tag=v0.0.1-$(date -u "+%d%m%Y%H%M%S")" >> $GITHUB_OUTPUT
          else
            echo "Última tag encontrada: $LAST_TAG"
            VERSION=$(echo $LAST_TAG | sed 's/^v//' | cut -d- -f1)
            MAJOR=$(echo $VERSION | cut -d. -f1)
            MINOR=$(echo $VERSION | cut -d. -f2)
            PATCH=$(echo $VERSION | cut -d. -f3)
            NEW_PATCH=$((PATCH + 1))
            TIMESTAMP=$(date -u "+%d%m%Y%H%M%S")
            NEXT_TAG="v$MAJOR.$MINOR.$NEW_PATCH-$TIMESTAMP"
            echo "next_tag=$NEXT_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Create bumped tag using GitHub API
        if: github.event_name == 'push' || env.skip_tag != 'true'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          TAG=${{ steps.version.outputs.next_tag }}
          SHA=$(git rev-parse HEAD)

          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/git/refs \
            -H "Authorization: token $GH_PAT" \
            -H "Content-Type: application/json" \
            -d "{\"ref\": \"refs/tags/$TAG\", \"sha\": \"$SHA\"}"
